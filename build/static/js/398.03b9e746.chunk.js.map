{"version":3,"file":"static/js/398.03b9e746.chunk.js","mappings":"sKAEA,ECCe,WACb,OACE,gBAAKA,UAAU,SAAf,UACE,gBAAKA,UAAU,qBAGpB,C,oICAYC,EAAe,SAACC,GAC3B,gDAAO,WAAOC,GAAP,gGAGHA,EAAS,CAAEC,KAAMC,EAAAA,KAGXC,GAASC,EAAAA,EAAAA,cAAa,CAC1BC,MAAOC,eACPC,YAAaD,gDARZ,SAYoBH,EAAOK,WAAW,CAAEC,aAAc,WAZtD,OAYGC,EAZH,OAeGC,EAAUD,EAASE,MAGzBZ,EAAS,CAAEC,KAAMY,EAAAA,GAAiBC,QAASH,IAC3CX,EAAS,CAAEC,KAAMc,EAAAA,GAAkBD,QAASf,IAnBzC,kDAsBHiB,QAAQC,IAAR,MACAjB,EAAS,CAAEC,KAAMiB,EAAAA,GAAeJ,QAAS,KAAMK,UAvB5C,0DAAP,qDA0BD,E,mBCPD,EAzBmB,SAAC,GAAgB,IAClC,EADiC,EAAbC,OACmCC,OAA/CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,YAAaC,EAAlC,EAAkCA,UAElC,OACE,iBAAK5B,UAAU,OAAf,WACE,gBAAKA,UAAU,WAAf,UACE,gBACEA,UAAU,aACV6B,IAAG,gBAAWD,EAAUJ,OAAOM,KAAKC,KACpCC,IAAG,UAAKN,QAGZ,iBAAK1B,UAAU,UAAf,WACE,iBAAKA,UAAU,OAAf,WACE,wBAAKyB,KACL,yCAAiBE,EAAjB,uBAEF,gBAAK3B,UAAU,UAAf,UACE,SAAC,KAAD,CAAMiC,GAAE,WAAMP,GAAd,8BAKT,E,UC0CD,EA9DgB,WAEd,OAA+DQ,EAAAA,EAAAA,KAC7D,SAACC,GAAD,OAAWA,EAAMrB,OAAjB,IADMA,EAAR,EAAQA,QAASZ,EAAjB,EAAiBA,YAAakC,EAA9B,EAA8BA,aAAcC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,MAI/CnC,GAAWoC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRrC,EAASF,EAAaC,GACvB,GAAE,CAACC,EAAUD,IAGd,IAAMuC,GAAcvC,EAAc,GAAKkC,EACjCM,EAAWD,EAAaL,EACxBO,EAAmB7B,EAAQ8B,MAAMH,EAAYC,GAcnD,OAAOL,GACL,SAACQ,EAAA,EAAD,IACEP,GACF,uBAAIA,KAEJ,iCACE,gBAAKtC,UAAU,cAAf,SACG2C,EAAiBG,KAAI,SAACvB,GAAD,OACpB,SAAC,EAAD,CAAgCA,OAAQA,GAAvBA,EAAOwB,IAAIC,GADR,OAIxB,iBAAKhD,UAAU,aAAf,WACE,mBACEiD,QApBmB,WACrB/C,EAAc,IAChBC,EAASF,EAAaC,EAAc,IACpCgD,OAAOC,SAAS,EAAG,GAEtB,EAgBOC,SAA0B,IAAhBlD,EACVF,UAAS,iBAA4B,IAAhBE,EAAoB,kBAAoB,IAH/D,4BAOA,mBACE+C,QA/Be,WACrB9C,EAASF,EAAaC,EAAc,IACpCgD,OAAOC,SAAS,EAAG,EACpB,EA6BOC,SAAUV,GAAY5B,EAAQuC,OAC9BrD,UAAS,iBACP0C,GAAY5B,EAAQuC,OAAS,kBAAoB,IAJrD,4BAYP,C","sources":["components/Loader/index.js","components/Loader/Loader.jsx","shared/redux/actions/recipesActions.js","components/RecipeCard/RecipeCard.jsx","pages/Recipes.jsx"],"sourcesContent":["import Loader from './Loader.jsx';\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <div className='loader__spinner'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import {\n  RECIPES_REQUEST,\n  RECIPES_SUCCESS,\n  RECIPES_FAILS,\n  SET_CURRENT_PAGE,\n} from '../constants/recipesConstants';\nimport { createClient } from 'contentful';\n\n// Action creator for fetching recipes from Contentful\nexport const fetchRecipes = (currentPage) => {\n  return async (dispatch) => {\n    try {\n      // Dispatch the request action to indicate that the request is in progress\n      dispatch({ type: RECIPES_REQUEST });\n\n      // Create a client instance with Contentful credentials\n      const client = createClient({\n        space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n        accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_KEY,\n      });\n\n      // Fetch recipes from Contentful\n      const response = await client.getEntries({ content_type: 'recipe' });\n\n      // Extract the recipe items from the response\n      const recipes = response.items;\n\n      // Dispatch the success action with the fetched recipes\n      dispatch({ type: RECIPES_SUCCESS, payload: recipes });\n      dispatch({ type: SET_CURRENT_PAGE, payload: currentPage });\n    } catch (error) {\n      // Dispatch the failure action if an error occurs\n      console.log(error);\n      dispatch({ type: RECIPES_FAILS, payload: error.message });\n    }\n  };\n};\n","import React from 'react';\r\nimport './recipeCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RecipeCard = ({ recipe }) => {\r\n  const { title, slug, cookingTime, thumbnail } = recipe.fields;\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='featured'>\r\n        <img\r\n          className='card-image'\r\n          src={`https:${thumbnail.fields.file.url}`}\r\n          alt={`${slug}`}\r\n        />\r\n      </div>\r\n      <div className='content'>\r\n        <div className='info'>\r\n          <h4>{title}</h4>\r\n          <p>Takes approx {cookingTime} mins to make</p>\r\n        </div>\r\n        <div className='actions'>\r\n          <Link to={`/${slug}`}>Cook this</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchRecipes } from '../shared/redux/actions/recipesActions';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\nimport Loader from '../components/Loader';\nimport '../styles/recipes.css';\n\nconst Recipes = () => {\n  // State\n  const { recipes, currentPage, itemsPerPage, loading, error } = useSelector(\n    (state) => state.recipes\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRecipes(currentPage));\n  }, [dispatch, currentPage]);\n\n  // Pagination logic\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const displayedRecipes = recipes.slice(startIndex, endIndex);\n\n  // Previous and Next buttons logic\n  const handleNextPage = () => {\n    dispatch(fetchRecipes(currentPage + 1));\n    window.scrollTo(0, 0);\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      dispatch(fetchRecipes(currentPage - 1));\n      window.scrollTo(0, 0);\n    }\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <p>{error}</p>\n  ) : (\n    <>\n      <div className='recipe-list'>\n        {displayedRecipes.map((recipe) => (\n          <RecipeCard key={recipe.sys.id} recipe={recipe} />\n        ))}\n      </div>\n      <div className='pagination'>\n        <button\n          onClick={handlePreviousPage}\n          disabled={currentPage === 1}\n          className={`button ${currentPage === 1 ? 'button-disabled' : ''}`}\n        >\n          Previous Page\n        </button>\n        <button\n          onClick={handleNextPage}\n          disabled={endIndex >= recipes.length}\n          className={`button ${\n            endIndex >= recipes.length ? 'button-disabled' : ''\n          }`}\n        >\n          Next Page\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Recipes;\n"],"names":["className","fetchRecipes","currentPage","dispatch","type","RECIPES_REQUEST","client","createClient","space","process","accessToken","getEntries","content_type","response","recipes","items","RECIPES_SUCCESS","payload","SET_CURRENT_PAGE","console","log","RECIPES_FAILS","message","recipe","fields","title","slug","cookingTime","thumbnail","src","file","url","alt","to","useSelector","state","itemsPerPage","loading","error","useDispatch","useEffect","startIndex","endIndex","displayedRecipes","slice","Loader","map","sys","id","onClick","window","scrollTo","disabled","length"],"sourceRoot":""}